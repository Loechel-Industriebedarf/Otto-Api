<?php
    require_once 'inc/config.php';
    require_once 'getDHLRetoure.php';

    $target_dir = "uploads/";
    $target_file = $target_dir . basename($_FILES["fileToUpload"]["name"]);
    // Check if image file is a actual image or fake image
    if(isset($_POST["submit"])) {
        if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
            $filename = htmlspecialchars(basename( $_FILES["fileToUpload"]["name"]));
            echo "Die Datei ". $filename . " wurde hochgeladen!<br><br>";

            $postfields = readShipmentsFromCsv($url, $accessToken, $target_file);    

            echo "<br><br><br><br><br>POSTFIELDS: ";
            logMe($postfields);

            echo "<br><br>Todays shipments: ";
            logMe(getTodaysShipments($url, $accessToken));
          } else {
            echo "Fehler beim Upload...";
          }
    }






    function createNewShipment($url, $accessToken, $json){
        if($json !== "" && $json !== null){
            $json .= "]}"; //Close json

            //Use the same return number for all packages
            //Read return number from first position and add it to the other positions
            $json = str_replace("%%%", json_decode($json, true)["positionItems"][0]["returnTrackingKey"]["trackingNumber"], $json); 

            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            $ch = curl_init();

            curl_setopt($ch, CURLOPT_URL, $url . '/v1/shipments');
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $json);

            $headers = array();
            $headers[] = 'Authorization: Bearer ' . $accessToken;
            $headers[] = 'Content-Type: application/json';
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

            $result = curl_exec($ch);
            if (curl_errno($ch)) {
                echo 'Error:' . curl_error($ch);
            }
            curl_close($ch);

            $shipments = json_decode($result, true);

            logMe($shipments);

            if(isset($shipments["errors"])){
                logMe($json);
            }

            return $json;
        }   
    }






    /*
    * Format:
    * Carrier [0]; TrackingNumber[1]; PositionItemId [2]; SalesOrderId[3]; OrderId[4]; OwnOrderId[5]
    */
    function readShipmentsFromCsv($url, $accessToken, $csvPath){
        $lastOrder = "";
        $postfields = array();
        $json = "";

        if (($handle = fopen($csvPath, "r")) !== FALSE) {
            fgetcsv($handle); //Skip first line
            $data = fgetcsv($handle, 0, ";"); //Read second line
            while (($data = fgetcsv($handle, 0, ";")) !== FALSE) {
                //Support for multiple shipments, I guess?
                //If a order number occurs multiple times, add to shipment instead of creating a new one
                $addToShipment = false;
                $carrier = $data[0];
                $trackingNumber = $data[1];
                //If 2 or more positions are in the same order, don't mark the parcel as shipped yet, just add it to the json string
                if($lastOrder == $data[4]){
                    $addToShipment = true;
                }
                //Only mark shipment, after all positions are included
                else {      
                    $json = createNewShipment($url, $accessToken, $json);   
                    if($json !== "" && $json !== null){ array_push($postfields, $json); }

                    $json = "";
                } 

                $json .= generateShipmentJson($url, $accessToken, $carrier, $trackingNumber, $data[2], $data[3], $data[5] . '_' . $data[4], $addToShipment);  
                echo $data[0] . ";" . $data[1] . ';' . $data[2] . ';' . $data[3] . ";" . $data[4] . ";" . $data[5] . "<br>";
                $lastOrder = $data[4];     
            } 

            //Execute last shipment
            $json = createNewShipment($url, $accessToken, $json);   
            if($json !== "" && $json !== null){ array_push($postfields, $json); }

            fclose($handle);
        } else {
            echo "Fehler beim Lesen der Datei...";
        } 

        return $postfields;
    }







    function generateShipmentJson($url, $accessToken, $carrier, $trackingNumber, $positionItemId, $salesOrderId, $labelNameBase, $addToShipment){
        $orderData = getOrderData($url, $accessToken, $salesOrderId);
        $orderStatus = $orderData["positionItems"][0]["fulfillmentStatus"];

        //If the position should be added to the shipment, generate a different json
        if($addToShipment && $orderStatus == "PROCESSABLE"){
            //%%% will be replaced with the first items return number later in createNewShipment()
            $json = ',{
                  "positionItemId": "' . $positionItemId . '",
                  "salesOrderId": "' . $salesOrderId . '",
                  "returnTrackingKey": {
                    "carrier": "DHL",
                    "trackingNumber": "%%%"
                  }
                }
              ';

              return $json;
        }
        //Only mark position as ship, if it wasn't shipped/returned already
        else if($orderStatus == "PROCESSABLE"){    
            include 'inc/config_dhl.php';     
            $dhl_return_number = postDHLRetoure($sandbox, $dhl_base64, $dhl_api_base64, $receiver_id, $orderData, date('Y-m-d') . '_' . $labelNameBase);


            $json = '{
                "trackingKey":{
                    "carrier":"' . $carrier . '",
                    "trackingNumber":"' . $trackingNumber . '"
                },
                "shipDate":"' . getCurrentDateTimeOtto() . '",
                "shipFromAddress":{
                    "city":"Sulingen",
                    "countryCode":"DEU",
                    "zipCode":"27232"
                },
                "positionItems":[{
                    "positionItemId":"' . $positionItemId . '",
                    "salesOrderId":"' . $salesOrderId . '",
                    "returnTrackingKey": {
                        "carrier": "DHL",
                        "trackingNumber": "' . $dhl_return_number . '"
                    }
                }'; //Json is closed later in createNewShipment()

            return $json;
        }
        return null;
    }






    function addToShipment($url, $accessToken, $json, $trackingNumber, $carrier){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url . '/v1/shipments/carriers/' . $carrier . '/trackingnumbers/' . $trackingNumber . '/positionitems');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $json);

        $headers = array();
        $headers[] = 'Authorization: Bearer ' . $accessToken;
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result, true);
    }



    function getOrderData($url, $accessToken, $order_id){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url . '/v4/orders/' . $order_id);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Authorization: Bearer ' . $accessToken;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result, true);
    }







    function getTodaysShipments($url, $accessToken){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        $requestUrl = $url . '/v1/shipments?datefrom=' . date('Y-m-d');

        curl_setopt($ch, CURLOPT_URL, $requestUrl);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Authorization: Bearer ' . $accessToken;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result, true);
    }


    function getShipmentById($url, $accessToken, $shipmentId){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url . '/v1/shipments/' . $shipmentId);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Authorization: Bearer ' . $accessToken;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result, true);
    }